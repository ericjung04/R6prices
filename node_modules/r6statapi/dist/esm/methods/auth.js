import axios from 'axios';
import { UBI_APPID, BASE_UBI_URI, UBI_AUTH_URI } from '../constants';
import { writeFile } from 'fs';
const FileName = 'Auth.json';
let Email = '';
let Password = '';
let Token = '';
let NextRefresh = '';
let Experation = '';
export const Auth = async (email, password) => {
    const currentTime = new Date().toISOString();
    if (!email || !password)
        throw new Error(`Please check email: ${email} and password: ${password}`);
    if (Token !== '' && currentTime < NextRefresh) {
        return Token;
    }
    if (email && password !== undefined) {
        Email = email;
        Password = password;
    }
    const newToken = await RequestToken(Email, Password);
    return newToken.ticket;
};
const RequestToken = async (email, password) => {
    console.log('Refreshing Token...');
    const headers = {
        Authorization: `Basic ${Buffer.from(`${email}:${password}`).toString('base64')}`,
        'Ubi-AppId': UBI_APPID,
        'Content-Type': 'application/json',
    };
    const URI = BASE_UBI_URI(3) + UBI_AUTH_URI;
    const response = await axios.post(URI, {}, { headers });
    const data = response.data;
    Token = data.ticket;
    NextRefresh = data.expiration;
    Experation = data.expiration;
    writeFile(FileName, JSON.stringify(data, null, 2), err => {
        if (err) {
            console.error('Error writing to file', err);
        }
        else {
            console.log('Token data has been saved to file!');
        }
    });
    return data;
};
export const CheckToken = async () => {
    const currentTime = new Date().toISOString();
    if (Token !== '' && currentTime < NextRefresh) {
        console.log('Retrieving token from memory');
        return Token;
    }
    else
        return (await RequestToken(Email, Password)).ticket;
};
export const GetExperation = async () => {
    return Experation;
};
//# sourceMappingURL=auth.js.map