"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getItemDetails = void 0;
const constants_1 = require("../constants");
const apiClient_1 = require("./apiClient");
const auth_1 = require("./auth");
const helperFunctions_1 = require("../utils/helperFunctions");
const defualtItem = {
    id: '',
    assetUrl: '',
    itemId: '',
    name: '',
    tags: [],
    type: '',
};
const getItemDetails = async (itemId) => {
    var token = await (0, auth_1.CheckToken)();
    const headers = {
        Authorization: `ubi_v1 t=${token}`,
        'Ubi-AppId': constants_1.UBI_APPID_Marketplace,
        'Ubi-SessionId': constants_1.UBI_SESSIONID_MARKETPLACE,
        'ubi-localecode': constants_1.UBI_LOCALECODE,
        'ubi-regionid': constants_1.UBI_REGIONID_MARKETPLACE,
        'x-platform-appid': constants_1.X_PLATFORM_APPID,
        // 'ubi-profileId': '', doesnt look this is needed?
        'Content-Type': 'application/json',
    };
    const body = [
        {
            operationName: 'GetItemDetails',
            variables: {
                spaceId: '0d2ae42d-4c27-4cb7-af6c-2099062302bb',
                itemId: itemId,
                tradeId: '',
                fetchTrade: false,
            },
            query: constants_1.GraphQL_ItemDetailsQuery,
        },
    ];
    const response = await (0, apiClient_1.ApiClient)(constants_1.UBI_MARKETPLACE_URI, headers, 'POST', body);
    const item = await extractItem(response);
    return item;
};
exports.getItemDetails = getItemDetails;
const extractItem = async (data) => {
    if (data === undefined)
        return defualtItem;
    data.forEach(async (item) => {
        const itemDetails = item.data.game.marketableItem;
        const tags = itemDetails.item.tags;
        if (itemDetails) {
            const marketData = await (0, helperFunctions_1.MapMarketData)(itemDetails.marketData);
            defualtItem.id = itemDetails.item.id;
            defualtItem.assetUrl = itemDetails.item.assetUrl;
            defualtItem.itemId = itemDetails.item.itemId;
            defualtItem.name = itemDetails.item.name;
            defualtItem.tags = tags;
            defualtItem.type = itemDetails.item.type;
            defualtItem.marktetData = marketData;
        }
    });
    return defualtItem;
};
//# sourceMappingURL=getItemDetails.js.map