"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.R6StatAPI = void 0;
const auth_1 = require("./methods/auth");
const getUserByUsername_1 = require("./methods/getUserByUsername");
const getUserByUserId_1 = require("./methods/getUserByUserId");
const getUserProgression_js_1 = require("./methods/getUserProgression.js");
const getServerStatus_1 = require("./methods/getServerStatus");
const getUserRank_js_1 = require("./methods/getUserRank.js");
const getOperator_1 = require("./methods/getOperator");
// import { GetUserStats, UserStats } from './methods/GetUserStats';
const searchMarketplace_1 = require("./methods/searchMarketplace");
const recommendedItems_1 = require("./methods/recommendedItems");
const getItemDetails_1 = require("./methods/getItemDetails");
const advancedSearchMarketplace_1 = require("./methods/advancedSearchMarketplace");
const getPendingTransactions_1 = require("./methods/getPendingTransactions");
const getTransactionHistory_1 = require("./methods/getTransactionHistory");
class R6StatAPI {
    async login(email, password) {
        return await (0, auth_1.Auth)(email, password);
    }
    async getUserByUsername(username, platform) {
        return await (0, getUserByUsername_1.GetUserByUsername)(username, platform);
    }
    async getUserByUserId(userId) {
        return await (0, getUserByUserId_1.GetUserByUserId)(userId);
    }
    async getUserProgression(userId) {
        return await (0, getUserProgression_js_1.GetUserProgression)(userId);
    }
    async getServerStatus(platform) {
        return await (0, getServerStatus_1.GetServerStatus)(platform);
    }
    async getUserRank(userId, platform) {
        return await (0, getUserRank_js_1.GetUserRank)(userId, platform);
    }
    async getUserOperators(userId, platform, view, aggregation, gameMode, teamRole, season) {
        return await (0, getOperator_1.GetOperator)(userId, platform, view, aggregation, gameMode, teamRole, season);
    }
    // TODO fix this
    // public async getUserStats(
    //   userId: string,
    //   platform: string,
    //   view: string,
    //   aggregation: string,
    //   gameMode: string,
    //   teamRole: string,
    //   season: string
    // ): Promise<UserStats> {
    //   return await GetUserStats(userId, platform, view, aggregation, gameMode, teamRole, season);
    // }
    async SearchMarketplace(searchQuery, limit) {
        return await (0, searchMarketplace_1.Search)(searchQuery, limit);
    }
    async getRecommendedItems(profileId, limit) {
        return await (0, recommendedItems_1.RecommendedItems)(profileId, limit);
    }
    async getItemDetails(itemId) {
        return await (0, getItemDetails_1.getItemDetails)(itemId);
    }
    async advancedMarketplaceSearch(searchTerm, marketplaceType, types, tags, sortBy, limit) {
        return await (0, advancedSearchMarketplace_1.AdvancedSearch)(searchTerm, marketplaceType, types, tags, sortBy, limit);
    }
    async GetPendingtransactions(profileId, limit) {
        return await (0, getPendingTransactions_1.GetTransactionsPending)(profileId, limit);
    }
    async GetTransactionHistory(profileId, limit) {
        return await (0, getTransactionHistory_1.GetTransactionHistroy)(profileId, limit);
    }
}
exports.R6StatAPI = R6StatAPI;
//# sourceMappingURL=index.js.map